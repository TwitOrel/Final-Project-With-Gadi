 1  history -c && history -w
 2  git init
 3  mkdir LINUX_Course_Project/{DOWNLOADS,CODE,DATA,BACKUPS,Work/Q{1..4}} -p
 4  cd ./LINUX_Course_Project/
 5  wget https://github.com/Telhai-Git/LINUX_COURSE_WORK/archive/refs/tags/downloads.tar.gz
 6  tar -xvzf downloads.tar.gz -C ./DOWNLOADS/
 7  git add . 
 8  git commit -m "extract downloads to DOWNLOADS"
 9  git push
10  rm downloads.tar.gz
11  git checkout -b BR_Q1
12  cp ./DOWNLOADS/LINUX_COURSE_WORK-downloads/*.py ./CODE/ -r
13  cp ./DOWNLOADS/LINUX_COURSE_WORK-downloads/*.{txt,jpg,csv} ./DATA/ -r
14  cd ./Work/Q1
15  touch ./q1_output.txt
16  echo Time: $(date) >> q1_output.txt 
17  echo USER DETAILS: $(cat /etc/passwd | grep $USER) >> q1_output.txt 
18  echo REPO: $(git rev-parse --show-toplevel) >> q1_output.txt 
19  echo GithubUrl: $(git remote get-url origin) >> q1_output.txt 
20  echo VERSIONID: $(grep '^VERSION_ID=' /etc/os-release | cut -d '=' -f2 | tr -d '"') >> q1_output.txt 
21  echo ------------------------------------------- >> q1_output.txt 
22  tree "$(git rev-parse --show-toplevel)" >> q1_output.txt 
23  echo ------------------------------------------- >> q1_output.txt 
24  find ~ -type f -name "*.sh" >> q1_output.txt 
25  git add .
26  git commit -m "second commit"
27  git push -u origin BR_Q1 
28  git checkout main 
29  git merge BR_Q1 
30  git push
31  git log --oneline --graph --decorate --all | tee git_commits.log
32  touch Work/Q1/history.log
33  history >> Work/Q1/history.log 
34  git add .
